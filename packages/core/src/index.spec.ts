import { expect, it } from "vitest";
import { generate } from "./index";

it("should generate exports", () => {
	expect(generate("A=a\nB=")).toBe(
		[
			"/* Auto generated by typedotenv */",
			"if (typeof process.env.A !== 'string') throw new Error('A is not defined in .env');",
			"export const A = process.env.A;",
			"if (typeof process.env.B !== 'string') throw new Error('B is not defined in .env');",
			"export const B = process.env.B;",
			"",
		].join("\n"),
	);
});

it("should prepend prefix", () => {
	const prefix = "/* eslint-disable */";
	expect(generate("", { prefix })).toBe(prefix + "\n");
});

it("should change eol", () => {
	expect(generate("", { eol: "\r\n" })).toBe(
		"/* Auto generated by typedotenv */\r\n",
	);
});

it("should change env object", () => {
	expect(generate("A=", { envObject: "import.meta.env" })).toBe(
		[
			"/* Auto generated by typedotenv */",
			"if (typeof import.meta.env.A !== 'string') throw new Error('A is not defined in .env');",
			"export const A = import.meta.env.A;",
			"",
		].join("\n"),
	);
});
